// <copyright file="UniformLongSampler.cs" company="QuantifEye">
// Copyright (c) QuantifEye. All rights reserved.
// Licensed under the Apache 2.0 license.
// See LICENSE.txt file in the project root for full license information.
// </copyright>

namespace Qtfy.Net.Numerics.Random.Samplers
{
    /// <summary>
    /// A distribution generator that is able to generate bounded uniformly distributed random variables.
    /// </summary>
    public sealed class UniformLongSampler : UniformDiscreteSampler<long>
    {
        private IRandomNumberEngine generator;

        /// <summary>
        /// Initializes a new instance of the <see cref="UniformLongSampler"/> class.
        /// The generator produces numbers in the interval [min, max].
        /// </summary>
        /// <param name="generator">
        /// The source generator to use as a random source.
        /// </param>
        /// <param name="min">
        /// The smallest number that will be generated by this generator.
        /// </param>
        /// <param name="max">
        /// The greatest number that will be generated by this generator.
        /// </param>
        public UniformLongSampler(IRandomNumberEngine generator, long min, long max)
            : base(min, max)
        {
            this.generator = generator;
        }

        /// <inheritdoc/>
        public override long GetNext()
        {
            return this.generator.NextLong(this.Min, this.Max);
        }
    }
}
