// <copyright file="UIntEngineTester.cs" company="QuantifEye">
// Copyright (c) QuantifEye. All rights reserved.
// Licensed under the Apache 2.0 license.
// See LICENSE.txt file in the project root for full license information.
// </copyright>

namespace Qtfy.Net.Numerics.Tests.Random.RandomNumberEngines
{
    using NUnit.Framework;
    using Qtfy.Net.Numerics.Random.RandomNumberEngines;
    using Qtfy.Net.Numerics.Random.SeedSequences;

    public class UIntEngineTester : EngineTester<MersenneTwister32Bit19937>
    {
        protected override MersenneTwister32Bit19937 GetEngine()
        {
            var ss = new LibStdCppSeedSequence(1, 2, 3);
            return new MersenneTwister32Bit19937(ss);
        }

        [Test]
        public void TestULong()
        {
            var expected = new[]
            {
                7348181598068725948UL,
                2702344000030125349UL,
                11375148292589950588UL,
                18207285961861342652UL,
                3773165389014961973UL,
                10191580196664936082UL,
                6752009953712574357UL,
                6218369684835154984UL,
                14121094415488446727UL,
                4604238859425825965UL,
                15396486439930459784UL,
                3119433781204442948UL,
                1109824652235264138UL,
                6409718533463238233UL,
                10208140272300551294UL,
                9339690911086437250UL,
                13828573667309943552UL,
                302343616819709665UL,
                787386895844678098UL,
                16176951034750438675UL,
                8793023328021258836UL,
                11734878215962017651UL,
                1890568995285127UL,
                10861772371055007636UL,
                15537961840005424265UL,
            };

            this.Compare(expected, mt => mt.NextULong());
            this.Compare(expected, mt => mt.NextULong(ulong.MinValue, ulong.MaxValue));
        }

        [Test]
        public void TestULongLargeRange()
        {
            this.Compare(
                new[]
                {
                    7348181598068725958UL,
                    2702344000030125359UL,
                    11375148292589950598UL,
                    18207285961861342662UL,
                    3773165389014961983UL,
                    10191580196664936092UL,
                    6752009953712574367UL,
                    6218369684835154994UL,
                    14121094415488446737UL,
                    4604238859425825975UL,
                    15396486439930459794UL,
                    3119433781204442958UL,
                    1109824652235264148UL,
                    6409718533463238243UL,
                    10208140272300551304UL,
                    9339690911086437260UL,
                    13828573667309943562UL,
                    302343616819709675UL,
                    787386895844678108UL,
                    16176951034750438685UL,
                    8793023328021258846UL,
                    11734878215962017661UL,
                    1890568995285137UL,
                    10861772371055007646UL,
                    15537961840005424275UL,
                },
                mt => mt.NextULong(10UL, ulong.MaxValue));
        }

        [Test]
        public void TestULongSmallRange()
        {
            this.Compare(
                new[]
                {
                    16571553634923501765UL,
                    11925716036884901166UL,
                    12996537425869737790UL,
                    9952540189730796880UL,
                    18082110375453267537UL,
                    12873605680622744726UL,
                    13827610896280601782UL,
                    12342805818059218765UL,
                    10333196689090039955UL,
                    15633090570318014050UL,
                    11229000536514445167UL,
                    15798736906032313988UL,
                    9525715653674485482UL,
                    10010758932699453915UL,
                    18016395364876034653UL,
                    13322421148357932927UL,
                    16529099620194501749UL,
                    16132693849467383297UL,
                    14346538259215766275UL,
                    10440401951020730178UL,
                    9339282692678199987UL,
                    10138590853954704649UL,
                    9938358250497021609UL,
                    13083203585553550164UL,
                    9364936829172211714UL,
                },
                mt => mt.NextULong(ulong.MaxValue / 2UL + 10UL, ulong.MaxValue));
        }

        [Test]
        public void TestLong()
        {
            var expected = new[]
            {
                -1875190438786049860L,
                -6521028036824650459L,
                2151776255735174780L,
                8983913925006566844L,
                -5450206647839813835L,
                968208159810160274L,
                -2471362083142201451L,
                -3005002352019620824L,
                4897722378633670919L,
                -4619133177428949843L,
                6173114403075683976L,
                -6103938255650332860L,
                -8113547384619511670L,
                -2813653503391537575L,
                984768235445775486L,
                116318874231661442L,
                4605201630455167744L,
                -8921028420035066143L,
                -8435985141010097710L,
                6953578997895662867L,
                -430348708833516972L,
                2511506179107241843L,
                -9221481467859490681L,
                1638400334200231828L,
                6314589803150648457L,
            };

            this.Compare(expected, mt => mt.NextLong());
            this.Compare(expected, mt => mt.NextLong(long.MinValue, long.MaxValue));
        }

        [Test]
        public void TestLongLargeRange()
        {
            this.Compare(
                new[]
                {
                    -1875190438786049855L,
                    -6521028036824650454L,
                    2151776255735174785L,
                    8983913925006566849L,
                    -5450206647839813830L,
                    968208159810160279L,
                    -2471362083142201446L,
                    -3005002352019620819L,
                    4897722378633670924L,
                    -4619133177428949838L,
                    6173114403075683981L,
                    -6103938255650332855L,
                    -8113547384619511665L,
                    -2813653503391537570L,
                    984768235445775491L,
                    116318874231661447L,
                    4605201630455167749L,
                    -8921028420035066138L,
                    -8435985141010097705L,
                    6953578997895662872L,
                    -430348708833516967L,
                    2511506179107241848L,
                    -9221481467859490676L,
                    1638400334200231833L,
                    6314589803150648462L,
                },
                mt => mt.NextLong(long.MinValue + 5L, long.MaxValue));
        }

        [Test]
        public void TestLongSmallRange()
        {
            this.Compare(
                new[]
                {
                    7348181598068725958L,
                    2702344000030125359L,
                    3773165389014961983L,
                    729168152876021073L,
                    8858738338598491730L,
                    3650233643767968919L,
                    4604238859425825975L,
                    3119433781204442958L,
                    1109824652235264148L,
                    6409718533463238243L,
                    2005628499659669360L,
                    6575364869177538181L,
                    302343616819709675L,
                    787386895844678108L,
                    8793023328021258846L,
                    4099049111503157120L,
                    7305727583339725942L,
                    6909321812612607490L,
                    5123166222360990468L,
                    1217029914165954371L,
                    115910655823424180L,
                    915218817099928842L,
                    714986213642245802L,
                    3859831548698774357L,
                    141564792317435907L,
                },
                mt => mt.NextLong(10L, long.MaxValue));
        }

        [Test]
        public void TestUInt()
        {
            var expected = new[]
            {
                1710881851U,
                703781052U,
                629188492U,
                3870567717U,
                2648483098U,
                2671187580U,
                4239214109U,
                2964563388U,
                878508526U,
                587796277U,
                2372912177U,
                169772690U,
                1572074823U,
                2062585749U,
                1447827016U,
                849886248U,
                3287823501U,
                3673223431U,
                1072007897U,
                757089453U,
                3584773847U,
                3509352072U,
                726299775U,
                487284548U,
                258401188U,
            };

            this.Compare(expected, mt => mt.NextUInt());
            this.Compare(expected, mt => mt.NextUInt(uint.MinValue, uint.MaxValue));
        }

        [Test]
        public void TestUIntLargeRange()
        {
            this.Compare(
                new[]
                {
                    1710881856U,
                    703781057U,
                    629188497U,
                    3870567722U,
                    2648483103U,
                    2671187585U,
                    4239214114U,
                    2964563393U,
                    878508531U,
                    587796282U,
                    2372912182U,
                    169772695U,
                    1572074828U,
                    2062585754U,
                    1447827021U,
                    849886253U,
                    3287823506U,
                    3673223436U,
                    1072007902U,
                    757089458U,
                    3584773852U,
                    3509352077U,
                    726299780U,
                    487284553U,
                    258401193U,
                },
                mt => mt.NextUInt(uint.MinValue + 5U, uint.MaxValue));
        }

        [Test]
        public void TestUIntSmallRange()
        {
            this.Compare(
                new[]
                {
                    1710881856U,
                    703781057U,
                    629188497U,
                    3870567722U,
                    2648483103U,
                    2671187585U,
                    4239214114U,
                    2964563393U,
                    878508531U,
                    587796282U,
                    2372912182U,
                    169772695U,
                    1572074828U,
                    2062585754U,
                    1447827021U,
                    849886253U,
                    3287823506U,
                    3673223436U,
                    1072007902U,
                    757089458U,
                    3584773852U,
                    3509352077U,
                    726299780U,
                    487284553U,
                    258401193U,
                },
                mt => mt.NextUInt(5U, uint.MaxValue));
        }

        [Test]
        public void TestInt()
        {
            var expected = new[]
            {
                -436601797,
                -1443702596,
                -1518295156,
                1723084069,
                500999450,
                523703932,
                2091730461,
                817079740,
                -1268975122,
                -1559687371,
                225428529,
                -1977710958,
                -575408825,
                -84897899,
                -699656632,
                -1297597400,
                1140339853,
                1525739783,
                -1075475751,
                -1390394195,
                1437290199,
                1361868424,
                -1421183873,
                -1660199100,
                -1889082460,
            };

            this.Compare(expected, mt => mt.NextInt());
            this.Compare(expected, mt => mt.NextInt(int.MinValue, int.MaxValue));
        }

        [Test]
        public void TestIntLargeRange()
        {
            this.Compare(
                new[]
                {
                    -436601792,
                    -1443702591,
                    -1518295151,
                    1723084074,
                    500999455,
                    523703937,
                    2091730466,
                    817079745,
                    -1268975117,
                    -1559687366,
                    225428534,
                    -1977710953,
                    -575408820,
                    -84897894,
                    -699656627,
                    -1297597395,
                    1140339858,
                    1525739788,
                    -1075475746,
                    -1390394190,
                    1437290204,
                    1361868429,
                    -1421183868,
                    -1660199095,
                    -1889082455,
                },
                mt => mt.NextInt(int.MinValue + 5, int.MaxValue));
        }

        [Test]
        public void TestIntSmallRange()
        {
            this.Compare(
                new[]
                {
                    855440930,
                    351890531,
                    314594251,
                    1935283863,
                    1324241554,
                    1335593795,
                    2119607059,
                    1482281699,
                    439254268,
                    293898143,
                    1186456093,
                    84886350,
                    786037416,
                    1031292879,
                    723913513,
                    424943129,
                    1643911755,
                    1836611720,
                    536003953,
                    378544731,
                    1792386928,
                    1754676041,
                    363149892,
                    243642279,
                    129200599,
                },
                mt => mt.NextInt(5, int.MaxValue));
        }
    }
}
