// <copyright file="ULongEngineTester.cs" company="QuantifEye">
// Copyright (c) QuantifEye. All rights reserved.
// Licensed under the Apache 2.0 license.
// See LICENSE.txt file in the project root for full license information.
// </copyright>

namespace Qtfy.Net.Numerics.Tests.Random.RandomNumberEngines
{
    using NUnit.Framework;
    using Qtfy.Net.Numerics.Random.RandomNumberEngines;
    using Qtfy.Net.Numerics.Random.SeedSequences;

    public class ULongEngineTester : EngineTester<MersenneTwister64Bit19937>
    {
        protected override MersenneTwister64Bit19937 GetEngine()
        {
            var ss = new LibStdCppSeedSequence(1, 2, 3);
            return new MersenneTwister64Bit19937(ss);
        }

        [Test]
        public void TestULong()
        {
            var expected = new[]
            {
                1831209241179374162UL,
                4398843623863442686UL,
                2280222209083243558UL,
                4510746540251130221UL,
                3107701279045384467UL,
                244096890834070194UL,
                1086545272889272370UL,
                1274390812019108257UL,
                12568859400304541251UL,
                18435551483339772824UL,
                6344645167688650627UL,
                6447600125556800630UL,
                6360183476137325872UL,
                5572990799971676320UL,
                6881517021134196898UL,
                13582756119889365828UL,
                5093349270420745936UL,
                9496198057143275374UL,
                184899198103798245UL,
                13139041164398136512UL,
                6152799897302857159UL,
                6928933013888610031UL,
                15099895210921580593UL,
                8510258085793372635UL,
                11389751187763450802UL,
            };

            this.Compare(expected, mt => mt.NextULong());
            this.Compare(expected, mt => mt.NextULong(ulong.MinValue, ulong.MaxValue));
        }

        [Test]
        public void TestULongLargeRange()
        {
            this.Compare(
                new[]
                {
                    1831209241179374172UL,
                    4398843623863442696UL,
                    2280222209083243568UL,
                    4510746540251130231UL,
                    3107701279045384477UL,
                    244096890834070204UL,
                    1086545272889272380UL,
                    1274390812019108267UL,
                    12568859400304541261UL,
                    18435551483339772834UL,
                    6344645167688650637UL,
                    6447600125556800640UL,
                    6360183476137325882UL,
                    5572990799971676330UL,
                    6881517021134196908UL,
                    13582756119889365838UL,
                    5093349270420745946UL,
                    9496198057143275384UL,
                    184899198103798255UL,
                    13139041164398136522UL,
                    6152799897302857169UL,
                    6928933013888610041UL,
                    15099895210921580603UL,
                    8510258085793372645UL,
                    11389751187763450812UL,
                },
                mt => mt.NextULong(10UL, ulong.MaxValue));
        }

        [Test]
        public void TestULongSmallRange()
        {
            this.Compare(
                new[]
                {
                    10138976657444462898UL,
                    11422793848786497160UL,
                    10363483141396397596UL,
                    11478745306980340927UL,
                    10777222676377468050UL,
                    9345420482271810914UL,
                    9766644673299412002UL,
                    9860567442864329945UL,
                    15507801737007046442UL,
                    18441147778524662229UL,
                    12395694620699101130UL,
                    12447172099633176132UL,
                    12403463774923438753UL,
                    12009867436840613977UL,
                    12664130547421874266UL,
                    16014750096799458731UL,
                    11770046672065148785UL,
                    13971471065426413504UL,
                    9315821635906674939UL,
                    15792892619053844073UL,
                    12299771985506204396UL,
                    12687838543799080832UL,
                    16773319642315566113UL,
                    13478501079751462134UL,
                    14918247630736501218UL,
                },
                mt => mt.NextULong(ulong.MaxValue / 2UL + 10UL, ulong.MaxValue));
        }

        [Test]
        public void TestLong()
        {
            var expected = new[]
            {
                -7392162795675401646L,
                -4824528412991333122L,
                -6943149827771532250L,
                -4712625496603645587L,
                -6115670757809391341L,
                -8979275146020705614L,
                -8136826763965503438L,
                -7948981224835667551L,
                3345487363449765443L,
                9212179446484997016L,
                -2878726869166125181L,
                -2775771911297975178L,
                -2863188560717449936L,
                -3650381236883099488L,
                -2341855015720578910L,
                4359384083034590020L,
                -4130022766434029872L,
                272826020288499566L,
                -9038472838750977563L,
                3915669127543360704L,
                -3070572139551918649L,
                -2294439022966165777L,
                5876523174066804785L,
                -713113951061403173L,
                2166379150908674994L,
            };

            this.Compare(expected, mt => mt.NextLong());
            this.Compare(expected, mt => mt.NextLong(long.MinValue, long.MaxValue));
        }

        [Test]
        public void TestLongLargeRange()
        {
            this.Compare(
                new[]
                {
                    -7392162795675401641L,
                    -4824528412991333117L,
                    -6943149827771532245L,
                    -4712625496603645582L,
                    -6115670757809391336L,
                    -8979275146020705609L,
                    -8136826763965503433L,
                    -7948981224835667546L,
                    3345487363449765448L,
                    9212179446484997021L,
                    -2878726869166125176L,
                    -2775771911297975173L,
                    -2863188560717449931L,
                    -3650381236883099483L,
                    -2341855015720578905L,
                    4359384083034590025L,
                    -4130022766434029867L,
                    272826020288499571L,
                    -9038472838750977558L,
                    3915669127543360709L,
                    -3070572139551918644L,
                    -2294439022966165772L,
                    5876523174066804790L,
                    -713113951061403168L,
                    2166379150908674999L,
                },
                mt => mt.NextLong(long.MinValue + 5L, long.MaxValue));
        }

        [Test]
        public void TestLongSmallRange()
        {
            this.Compare(
                new[]
                {
                    915604620589687091L,
                    2199421811931721353L,
                    1140111104541621789L,
                    2255373270125565120L,
                    1553850639522692243L,
                    122048445417035107L,
                    543272636444636195L,
                    637195406009554138L,
                    6284429700152270635L,
                    9217775741669886422L,
                    3172322583844325323L,
                    3223800062778400325L,
                    3180091738068662946L,
                    2786495399985838170L,
                    3440758510567098459L,
                    6791378059944682924L,
                    2546674635210372978L,
                    4748099028571637697L,
                    92449599051899132L,
                    6569520582199068266L,
                    3076399948651428589L,
                    3464466506944305025L,
                    7549947605460790306L,
                    4255129042896686327L,
                    5694875593881725411L,
                },
                mt => mt.NextLong(10L, long.MaxValue));
        }

        [Test]
        public void TestUInt()
        {
            var expected = new[]
            {
                426361626U,
                1024185592U,
                530905604U,
                1050240020U,
                723568089U,
                56833236U,
                252981035U,
                296717233U,
                2926415624U,
                4292361318U,
                1477227818U,
                1501198887U,
                1480845612U,
                1297563035U,
                1602228037U,
                3162481850U,
                1185887789U,
                2211005906U,
                43050199U,
                3059171412U,
                1432560360U,
                1613267933U,
                3515718321U,
                1981448868U,
                2651883100U,
            };

            this.Compare(expected, mt => mt.NextUInt());
            this.Compare(expected, mt => mt.NextUInt(uint.MinValue, uint.MaxValue));
        }

        [Test]
        public void TestUIntLargeRange()
        {
            this.Compare(
                new[]
                {
                    426361630U,
                    1024185596U,
                    530905608U,
                    1050240024U,
                    723568093U,
                    56833241U,
                    252981039U,
                    296717237U,
                    2926415625U,
                    4292361317U,
                    1477227821U,
                    1501198890U,
                    1480845615U,
                    1297563038U,
                    1602228040U,
                    3162481851U,
                    1185887792U,
                    2211005908U,
                    43050204U,
                    3059171412U,
                    1432560363U,
                    1613267936U,
                    3515718321U,
                    1981448870U,
                    2651883102U,
                },
                mt => mt.NextUInt(uint.MinValue + 5U, uint.MaxValue));
        }

        [Test]
        public void TestUIntSmallRange()
        {
            this.Compare(
                new[]
                {
                    426361630U,
                    1024185596U,
                    530905608U,
                    1050240024U,
                    723568093U,
                    56833241U,
                    252981039U,
                    296717237U,
                    2926415625U,
                    4292361317U,
                    1477227821U,
                    1501198890U,
                    1480845615U,
                    1297563038U,
                    1602228040U,
                    3162481851U,
                    1185887792U,
                    2211005908U,
                    43050204U,
                    3059171412U,
                    1432560363U,
                    1613267936U,
                    3515718321U,
                    1981448870U,
                    2651883102U,
                },
                mt => mt.NextUInt(5U, uint.MaxValue));
        }

        [Test]
        public void TestInt()
        {
            var expected = new[]
            {
                -1721122022,
                -1123298056,
                -1616578044,
                -1097243628,
                -1423915559,
                -2090650412,
                -1894502613,
                -1850766415,
                778931976,
                2144877670,
                -670255830,
                -646284761,
                -666638036,
                -849920613,
                -545255611,
                1014998202,
                -961595859,
                63522258,
                -2104433449,
                911687764,
                -714923288,
                -534215715,
                1368234673,
                -166034780,
                504399452,
            };

            this.Compare(expected, mt => mt.NextInt());
            this.Compare(expected, mt => mt.NextInt(int.MinValue, int.MaxValue));
        }

        [Test]
        public void TestIntLargeRange()
        {
            this.Compare(
                new[]
                {
                    -1721122018,
                    -1123298052,
                    -1616578040,
                    -1097243624,
                    -1423915555,
                    -2090650407,
                    -1894502609,
                    -1850766411,
                    778931977,
                    2144877669,
                    -670255827,
                    -646284758,
                    -666638033,
                    -849920610,
                    -545255608,
                    1014998203,
                    -961595856,
                    63522260,
                    -2104433444,
                    911687764,
                    -714923285,
                    -534215712,
                    1368234673,
                    -166034778,
                    504399454,
                },
                mt => mt.NextInt(int.MinValue + 5, int.MaxValue));
        }

        [Test]
        public void TestIntSmallRange()
        {
            this.Compare(
                new[]
                {
                    213180817,
                    512092799,
                    265452806,
                    525120013,
                    361784048,
                    28416623,
                    126490522,
                    148358621,
                    1463207813,
                    2146180658,
                    738613912,
                    750599446,
                    740422809,
                    648781521,
                    801114021,
                    1581240926,
                    592943898,
                    1105502955,
                    21525104,
                    1529585707,
                    716280183,
                    806633969,
                    1757859161,
                    990724436,
                    1325941551,
                },
                mt => mt.NextInt(5, int.MaxValue));
        }
    }
}
